@model ELegal.RecruitmentPortal.Web.Areas.Administration.ViewModels.RecruitmentCompany.RecruitmentCompanyEditModel



<div class="heading-buttons">
    <h1>@ViewBag.Title</h1>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <!-- Row -->
    <div class="row-fluid">

        <!-- Column -->
        <div class="span6">
            <div class="widget row-fluid widget-heading-simple widget-body-gray" data-toggle="collapse-widget">

                <div class="widget-head">
                    <h4 class="heading">Main Details</h4>
                </div>

                <div class="widget-body">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.RecruitmentCompany.CompanyName)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.CompanyName)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.CompanyName)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.RecruitmentCompany.LogoUrl)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.LogoUrl)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.LogoUrl)
                    </div>
                </div>

                <div class="widget-head">
                    <h4 class="heading">Contact Details</h4>
                </div>

                <div class="widget-body">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.RecruitmentCompany.Address1)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.Address1)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.Address1)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.RecruitmentCompany.Address2)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.Address2)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.Address2)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.RecruitmentCompany.Address3)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.Address3)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.Address3)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.RecruitmentCompany.Address4)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.Address4)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.Address4)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.City)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.City)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.County)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.County)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.Postcode)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.Postcode)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.RecruitmentCompany.Telephone)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.Telephone)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.Telephone)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.RecruitmentCompany.EmailAddress)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RecruitmentCompany.EmailAddress)
                        @Html.ValidationMessageFor(model => model.RecruitmentCompany.EmailAddress)
                    </div>

                </div>
                <div class="widget-head">
                    <h4 class="heading">Rating</h4>
                </div>

                <div class="widget-body">
                    @Html.DropDownList("RatingId", Model.RatingsList, "Rating")
                </div>
                <p>
                    @*<button type="submit" value="create" id="btn-loading" class="btn btn-primary" data-loading-text="Custom Loading Text ...">Save</button>*@
                   <input type="submit" value="Create" />
                </p>

            </div>
        </div>
        <div class="span6">
            <div class="widget row-fluid widget-heading-simple widget-body-gray" data-toggle="collapse-widget">
                <div class="widget-head">
                    <h4 class="heading">Recruiters</h4>
                </div>
                <div class="widget-body">
                    <div class="buttons pull-right">
                        <a href="@Url.Action("Create", "RecruitmentUser", new { area = "Administration" })" class="btn btn-primary btn-icon glyphicons circle_plus"><i></i>Add Recruiter</a>
                        
                    </div>
                </div>
                <div class="widget-body">
                   
                    <div class="clearfix"></div>
                    <table class="table table-striped table-bordered table-white table-responsive swipe-horizontal table-primary">
                        <thead>
                            <tr>

                                <th>Name
                                </th>

                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.RecruitmentUserItems)
                            {
                                <tr class="selectable">
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)
                                    </td>



                                    <td>
                                        <a href=" @Url.Action("Details", "RecruitmentUser", new { area = "Administration", id = item.RecruitmentUserId }) " class="btn-action glyphicons eye_open btn-default"><i></i></a>
                                        <a href=" @Url.Action("Edit", "RecruitmentUser", new { area = "Administration", id = item.RecruitmentUserId }) " class="btn-action glyphicons pencil btn-success"><i></i></a>
                                        <a href=" @Url.Action("Delete", "RecruitmentUser", new { area = "Administration", id = item.RecruitmentUserId }) " class="btn-action glyphicons remove_2 btn-danger"><i></i></a>

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
     if (Model.RecruitmentCompany.RecruitmentCompanyId != 0)
     {
         @Html.HiddenFor(model => model.RecruitmentCompany.RecruitmentCompanyId)
     }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
